---
jobs:
  etc:
    name: 'Other Platforms/v${{matrix.perl}}'
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix:
        os:
          - architecture: x86-64
            host: ubuntu-20.04
            name: freebsd
            pkg: pkg install -y
            version: 13.2
          - architecture: arm64
            host: ubuntu-20.04
            name: freebsd
            pkg: pkg install -y
            version: 13.2
        perl:
          - 5.38
      max-parallel: 25
    uses: sanko/mii/.github/workflows/bsd.yml@main
    with:
      arch: '${{ matrix.os.architecture }}'
      host: '${{ matrix.os.host }}'
      os: '${{ matrix.os.name }}'
      perl: '${{ matrix.perl }}'
      pkg: '${{ matrix.os.pkg }}'
      version: '${{ matrix.os.version }}'
  linux:
    name: 'Linux/v${{matrix.perl}}'
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix:
        flags: '${{ fromJSON(needs.setup.outputs.matrix).flags }}'
        os:
          - ubuntu-22.04
        perl: '${{ fromJSON(needs.setup.outputs.matrix).perl }}'
      max-parallel: 25
    uses: sanko/mii/.github/workflows/core.yml@main
    with:
      flags: '${{ matrix.flags }}'
      os: '${{ matrix.os }}'
      perl: '${{ matrix.perl }}'
  macos:
    name: "[${{ matrix.os == 'macos-14' && 'M1' || 'Intel' }}] macOS/v${{matrix.perl}}"
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix:
        exclude:
          - flags: -Dusequadmath
          - flags: -Dusethreads
        flags: '${{ fromJSON(needs.setup.outputs.matrix).flags }}'
        os:
          - macos-14
          - macos-latest
        perl: '${{ fromJSON(needs.setup.outputs.matrix).perl }}'
      max-parallel: 25
    uses: sanko/mii/.github/workflows/core.yml@main
    with:
      flags: '${{ matrix.flags }}'
      os: '${{ matrix.os }}'
      perl: '${{ matrix.perl }}'
  results:
    name: Results
    needs:
      - macos
      - win32
      - linux
    runs-on: ubuntu-22.04
    steps:
      - name: Do something
        run: echo "Do something"
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Report test results
        run: ls -R artifacts
  setup:
    name: Generate Testing Matrix
    outputs:
      matrix: '${{ steps.matrix.outputs.matrix }}'
    runs-on: ubuntu-22.04
    steps:
      - env:
          DATA: |
            {
              "perl": ["5.38.2"],
              "flags": [""]
            }
        id: matrix
        run: "jq -rn 'env.DATA | fromjson | @json \"matrix=\\(.)\"' > $GITHUB_OUTPUT\n"
  win32:
    name: 'Windows/v${{matrix.perl}}'
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix:
        flags: '${{ fromJSON(needs.setup.outputs.matrix).flags }}'
        os:
          - windows-2022
        perl: '${{ fromJSON(needs.setup.outputs.matrix).perl }}'
      max-parallel: 25
    uses: sanko/mii/.github/workflows/core.yml@main
    with:
      flags: '${{ matrix.flags }}'
      os: '${{ matrix.os }}'
      perl: '${{ matrix.perl }}'
name: CI Matrix
on:
  pull_request: ~
  push: ~
  schedule:
    - cron: 42 5 * * 0
  workflow_dispatch: ~
